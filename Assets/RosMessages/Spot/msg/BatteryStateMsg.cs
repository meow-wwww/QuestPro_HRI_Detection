//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;
using RosMessageTypes.BuiltinInterfaces;

namespace RosMessageTypes.Spot
{
    [Serializable]
    public class BatteryStateMsg : Message
    {
        public const string k_RosMessageName = "spot_msgs/BatteryState";
        public override string RosMessageName => k_RosMessageName;

        //  Status
        public const byte STATUS_UNKNOWN = 0;
        public const byte STATUS_MISSING = 1;
        public const byte STATUS_CHARGING = 2;
        public const byte STATUS_DISCHARGING = 3;
        public const byte STATUS_BOOTING = 4;
        public HeaderMsg header;
        public string identifier;
        public double charge_percentage;
        public DurationMsg estimated_runtime;
        public double current;
        public double voltage;
        public double[] temperatures;
        public byte status;

        public BatteryStateMsg()
        {
            this.header = new HeaderMsg();
            this.identifier = "";
            this.charge_percentage = 0.0;
            this.estimated_runtime = new DurationMsg();
            this.current = 0.0;
            this.voltage = 0.0;
            this.temperatures = new double[0];
            this.status = 0;
        }

        public BatteryStateMsg(HeaderMsg header, string identifier, double charge_percentage, DurationMsg estimated_runtime, double current, double voltage, double[] temperatures, byte status)
        {
            this.header = header;
            this.identifier = identifier;
            this.charge_percentage = charge_percentage;
            this.estimated_runtime = estimated_runtime;
            this.current = current;
            this.voltage = voltage;
            this.temperatures = temperatures;
            this.status = status;
        }

        public static BatteryStateMsg Deserialize(MessageDeserializer deserializer) => new BatteryStateMsg(deserializer);

        private BatteryStateMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.identifier);
            deserializer.Read(out this.charge_percentage);
            this.estimated_runtime = DurationMsg.Deserialize(deserializer);
            deserializer.Read(out this.current);
            deserializer.Read(out this.voltage);
            deserializer.Read(out this.temperatures, sizeof(double), deserializer.ReadLength());
            deserializer.Read(out this.status);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.identifier);
            serializer.Write(this.charge_percentage);
            serializer.Write(this.estimated_runtime);
            serializer.Write(this.current);
            serializer.Write(this.voltage);
            serializer.WriteLength(this.temperatures);
            serializer.Write(this.temperatures);
            serializer.Write(this.status);
        }

        public override string ToString()
        {
            return "BatteryStateMsg: " +
            "\nheader: " + header.ToString() +
            "\nidentifier: " + identifier.ToString() +
            "\ncharge_percentage: " + charge_percentage.ToString() +
            "\nestimated_runtime: " + estimated_runtime.ToString() +
            "\ncurrent: " + current.ToString() +
            "\nvoltage: " + voltage.ToString() +
            "\ntemperatures: " + System.String.Join(", ", temperatures.ToList()) +
            "\nstatus: " + status.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
