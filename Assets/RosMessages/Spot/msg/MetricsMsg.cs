//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;
using RosMessageTypes.Std;
using RosMessageTypes.BuiltinInterfaces;

namespace RosMessageTypes.Spot
{
    [Serializable]
    public class MetricsMsg : Message
    {
        public const string k_RosMessageName = "spot_msgs/Metrics";
        public override string RosMessageName => k_RosMessageName;

        public HeaderMsg header;
        public float distance;
        public int gait_cycles;
        public DurationMsg time_moving;
        public DurationMsg electric_power;

        public MetricsMsg()
        {
            this.header = new HeaderMsg();
            this.distance = 0.0f;
            this.gait_cycles = 0;
            this.time_moving = new DurationMsg();
            this.electric_power = new DurationMsg();
        }

        public MetricsMsg(HeaderMsg header, float distance, int gait_cycles, DurationMsg time_moving, DurationMsg electric_power)
        {
            this.header = header;
            this.distance = distance;
            this.gait_cycles = gait_cycles;
            this.time_moving = time_moving;
            this.electric_power = electric_power;
        }

        public static MetricsMsg Deserialize(MessageDeserializer deserializer) => new MetricsMsg(deserializer);

        private MetricsMsg(MessageDeserializer deserializer)
        {
            this.header = HeaderMsg.Deserialize(deserializer);
            deserializer.Read(out this.distance);
            deserializer.Read(out this.gait_cycles);
            this.time_moving = DurationMsg.Deserialize(deserializer);
            this.electric_power = DurationMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.header);
            serializer.Write(this.distance);
            serializer.Write(this.gait_cycles);
            serializer.Write(this.time_moving);
            serializer.Write(this.electric_power);
        }

        public override string ToString()
        {
            return "MetricsMsg: " +
            "\nheader: " + header.ToString() +
            "\ndistance: " + distance.ToString() +
            "\ngait_cycles: " + gait_cycles.ToString() +
            "\ntime_moving: " + time_moving.ToString() +
            "\nelectric_power: " + electric_power.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
