//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Spot
{
    [Serializable]
    public class FeedbackMsg : Message
    {
        public const string k_RosMessageName = "spot_msgs/Feedback";
        public override string RosMessageName => k_RosMessageName;

        public bool standing;
        public bool sitting;
        public bool moving;
        public string serial_number;
        public string species;
        public string version;
        public string nickname;
        public string computer_serial_number;

        public FeedbackMsg()
        {
            this.standing = false;
            this.sitting = false;
            this.moving = false;
            this.serial_number = "";
            this.species = "";
            this.version = "";
            this.nickname = "";
            this.computer_serial_number = "";
        }

        public FeedbackMsg(bool standing, bool sitting, bool moving, string serial_number, string species, string version, string nickname, string computer_serial_number)
        {
            this.standing = standing;
            this.sitting = sitting;
            this.moving = moving;
            this.serial_number = serial_number;
            this.species = species;
            this.version = version;
            this.nickname = nickname;
            this.computer_serial_number = computer_serial_number;
        }

        public static FeedbackMsg Deserialize(MessageDeserializer deserializer) => new FeedbackMsg(deserializer);

        private FeedbackMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.standing);
            deserializer.Read(out this.sitting);
            deserializer.Read(out this.moving);
            deserializer.Read(out this.serial_number);
            deserializer.Read(out this.species);
            deserializer.Read(out this.version);
            deserializer.Read(out this.nickname);
            deserializer.Read(out this.computer_serial_number);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.standing);
            serializer.Write(this.sitting);
            serializer.Write(this.moving);
            serializer.Write(this.serial_number);
            serializer.Write(this.species);
            serializer.Write(this.version);
            serializer.Write(this.nickname);
            serializer.Write(this.computer_serial_number);
        }

        public override string ToString()
        {
            return "FeedbackMsg: " +
            "\nstanding: " + standing.ToString() +
            "\nsitting: " + sitting.ToString() +
            "\nmoving: " + moving.ToString() +
            "\nserial_number: " + serial_number.ToString() +
            "\nspecies: " + species.ToString() +
            "\nversion: " + version.ToString() +
            "\nnickname: " + nickname.ToString() +
            "\ncomputer_serial_number: " + computer_serial_number.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
