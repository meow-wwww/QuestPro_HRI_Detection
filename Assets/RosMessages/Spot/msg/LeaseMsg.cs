//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Spot
{
    [Serializable]
    public class LeaseMsg : Message
    {
        public const string k_RosMessageName = "spot_msgs/Lease";
        public override string RosMessageName => k_RosMessageName;

        public string resource;
        public string epoch;
        public uint[] sequence;

        public LeaseMsg()
        {
            this.resource = "";
            this.epoch = "";
            this.sequence = new uint[0];
        }

        public LeaseMsg(string resource, string epoch, uint[] sequence)
        {
            this.resource = resource;
            this.epoch = epoch;
            this.sequence = sequence;
        }

        public static LeaseMsg Deserialize(MessageDeserializer deserializer) => new LeaseMsg(deserializer);

        private LeaseMsg(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.resource);
            deserializer.Read(out this.epoch);
            deserializer.Read(out this.sequence, sizeof(uint), deserializer.ReadLength());
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.resource);
            serializer.Write(this.epoch);
            serializer.WriteLength(this.sequence);
            serializer.Write(this.sequence);
        }

        public override string ToString()
        {
            return "LeaseMsg: " +
            "\nresource: " + resource.ToString() +
            "\nepoch: " + epoch.ToString() +
            "\nsequence: " + System.String.Join(", ", sequence.ToList());
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize);
        }
    }
}
